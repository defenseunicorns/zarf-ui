before:
  hooks:
    - go mod tidy

# Build a universal macOS binary
universal_binaries:
  - replace: false

# Build the different combination of goos/arch binaries
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    ldflags:
      - -s -w -X github.com/defenseunicorns/zarf-ui/src/config.UIVersion={{.Tag}} -X github.com/defenseunicorns/zarf/src/config.CLIVersion={{ .Env.ZARF_CLI_VERSION }} -X github.com/defenseunicorns/zarf/src/config.ActionsCommandZarfPrefix=zarf -X k8s.io/component-base/version.gitVersion=v0.0.0+zarf{{.Tag}} -X k8s.io/component-base/version.gitCommit={{.FullCommit}} -X k8s.io/component-base/version.buildDate={{.Date}}
    goarch:
      - amd64
      - arm64

# Save the built artifacts as binaries (instead of wrapping them in a tarball)
archives:
  - format: binary
    name_template: "{{ .ProjectName }}_{{ .Tag }}_{{- title .Os }}_{{ .Arch }}"

# generate a sha256 checksum of all release artifacts
# NOTE: We are explicitly adding the init-packages that are built prior to GoReleaser stage in the GitHub Actions workflow
checksum:
  name_template: "checksums.txt"
  algorithm: sha256

# generate sboms for each binary artifact
sboms:
  - artifacts: binary
    documents:
      - "sbom_{{ .ProjectName }}_{{ .Tag }}_{{- title .Os }}_{{ .Arch }}.sbom"

snapshot:
  name_template: "{{ incpatch .Version }}-snapshot"

# Use the auto-generated changlog github provides
changelog:
  use: github-native

# Generate a GitHub release and publish the release for the tag
# NOTE: We are explicitly adding the init-packages that are built prior to GoReleaser stage in the GitHub Actions workflow
release:
  github:
    owner: defenseunicorns
    name: zarf-ui
  prerelease: auto
  mode: append
