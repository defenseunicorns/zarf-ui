name: Publish Zarf UI on Tag

permissions:
  contents: read

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout the repo and setup the tooling for this job
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          fetch-depth: 0

      - name: Setup golang
        uses: ./.github/actions/golang

      - name: Setup NodeJS
        uses: ./.github/actions/node

      - name: Setup K3d
        uses: ./.github/actions/k3d

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Build binary and zarf packages
        uses: ./.github/actions/packages

      - name: Cache browsers
        uses: actions/cache@v3
        with:
          path: "~/.cache/ms-playwright/"
          key: ${{ runner.os }}-browsers

      - name: Ensure playright is installed
        run: npx --prefix src/ui playwright install

      - name: Run UI tests
        run: make test-ui

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs

      - name: Save playright logs
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: src/ui/playwright-report/
          retention-days: 30

      # Set up AWS credentials for GoReleaser to upload backups of artifacts to S3
      - name: Set AWS Credentials
        uses: aws-actions/configure-aws-credentials@8c3f20df09ac63af7b3ae3d7c91f105f857d8497 # v4.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_GOV_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_GOV_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: Skip brew latest for pre-release tags and setup CLI version
        run: |
          if [[ $GITHUB_REF_NAME == *"rc"* ]]; then
            echo "BREW_NAME=zarf-ui@latest-rc" >> $GITHUB_ENV
          else
            echo "BREW_NAME=zarf-ui" >> $GITHUB_ENV
          fi
          echo ZARF_CLI_VERSION=$(cat go.mod | grep "github.com/defenseunicorns/zarf " | cut -d " " -f 2) >> $GITHUB_ENV

      # Create the GitHub release notes, upload artifact backups to S3, publish homebrew recipe
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@5fdedb94abba051217030cc86d4523cf3f02243d # v4.6.0
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.ZARF_ORG_PROJECT_TOKEN }}

      - name: Save CVE report
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: cve-report
          path: build/zarf-ui-known-cves.csv
